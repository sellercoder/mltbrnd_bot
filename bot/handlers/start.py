# IMPORTS ##################################################
# aiogram packages
from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.dispatcher.filters import Text
from aiogram.types import InputFile
from aiogram.types import Message
from aiogram.types import CallbackQuery
from aiogram.types import ReplyKeyboardRemove
from utils.loader import bot
from utils.loader import dp
from utils.logging import *
from .keyboard import *
from api import *
# END IMPORTS ##############################################

def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    catalog_btn = KeyboardButton(text="üì¶ –¢–∞—Ä–∏—Ñ—ã")
    profile_btn = KeyboardButton(text="üíº –ö–∞–±–∏–Ω–µ—Ç")
    payment_btn = KeyboardButton(text="üßÆ –û–ø–ª–∞—Ç–∞")
    delivery_btn = KeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∫–∞")
    contacts_btn = KeyboardButton(text="üì™ –ö–æ–Ω—Ç–∞–∫—Ç—ã")
    markup.row(catalog_btn,profile_btn)
    markup.row(payment_btn,delivery_btn)
    markup.row(contacts_btn)
    return markup

def cancel_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    catalog_btn = KeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    markup.row(catalog_btn)
    return markup

@dp.message_handler(commands=["start"], state="*")
async def bot_start(message: types.Message):
    text = """
    –ë–æ—Ç –¥–ª—è @art994 –æ—Ç @sellercoder
    https://telegra.ph/Razrabotka-bota-04-14
    """
    cover = InputFile('cover.jpg')
    await message.answer_photo(cover,caption=text,reply_markup=main_menu())

@dp.message_handler(text=["‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"], state="*")
async def bot_main(message: types.Message):
    text = "–î–∞—Ä–æ–≤–∞, –æ—Ç–µ—Ü!"
    cover = InputFile('cover.jpg')
    await message.delete()
    await message.answer("‚ú®")
    await message.answer_photo(cover,caption=text,reply_markup=main_menu())

@dp.message_handler(text=["üì¶ –¢–∞—Ä–∏—Ñ—ã"])
async def catalog_page(message: types.Message):
    await message.answer("‚ö°Ô∏è",reply_markup=cancel_menu())
    await message.answer(
        text=f"<b>üí¨ –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–∞—Ö</b>",
        reply_markup=catalog_menu())

async def show_menu(callback: CallbackQuery, **kwargs):
    await callback.answer(cache_time=1)
    await callback.message.edit_text(
        text=f"<b>üí¨ –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–∞—Ö</b>",
        reply_markup=catalog_menu())

async def show_provider(callback: CallbackQuery, provider,  **kwargs):
    provider = getProvider(provider)
    logger.info(provider.name)
    text = "<b>{}</b>\n\n<b>üí¨ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–∞—Ä–∏—Ñ</b>".format(
        provider.name,
        provider.description)
    await callback.answer(cache_time=1)
    await callback.message.edit_text(text,
        reply_markup=provider_menu(provider.id))

async def show_plan(callback: CallbackQuery, provider, plan, **kwargs):
    plan = Plan.find(plan)
    logger.info(plan.name)
    text = "<b>{}</b>\n\n{}".format(plan.name,plan.description)
    await callback.answer(cache_time=1)
    await callback.message.edit_text(text,reply_markup=plan_menu(plan.id))

async def checkout_first(callback: CallbackQuery, provider, plan, **kwargs):
    plan = Plan.find(plan)
    logger.info(plan.name)
    text = "–ò —Ç—É—Ç –º—ã –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω—è—Ç—å –∞–Ω–∫–µ—Ç—É.."
    await callback.answer(cache_time=1)
    await callback.message.edit_text(text)

@dp.callback_query_handler(shop_cd.filter())
async def shop_navigate(call: CallbackQuery, callback_data: dict):
    logger.info(callback_data)
    current_level = callback_data.get("level")
    provider = callback_data.get("provider")
    plan = callback_data.get("plan")
    levels = {
        "0": show_menu,
        "1": show_provider,
        "2": show_plan,
        "3": checkout_first
    }
    current_level_function = levels[current_level]
    await current_level_function(
        call,
        provider=provider,
        plan=plan
    )


